<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KONNECT-REDIS</name>
    </assembly>
    <members>
        <member name="M:KONNECT_REDIS.Controllers.KeysController.GetAllKeys(System.Int32,System.Int32)">
            <summary>
            Retrieve list of all keys in db
            </summary>
            <param name="pageNumber">Page number</param>
            <param name="pageSize">Page size</param>
            <returns></returns>
        </member>
        <member name="M:KONNECT_REDIS.Controllers.KeysController.GetKeyByQuery(System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves a list of keys according to a Redis key pattern 
            </summary>
            <param name="pattern">A Redis key pattern</param>
            <param name="pageNumber">Paginates Search Query</param>
            /// <param name="pageSize">Page size</param>
            <returns></returns>
        </member>
        <member name="M:KONNECT_REDIS.Controllers.KeysController.BatchDeleteKeysByQuery(System.String)">
            <summary>
            Delete multiple keys by Redis key pattern
            </summary>
            <param name="pattern">A Redis key pattern</param>
            <returns>Number of deleted keys and pattern they followed, or throws an error</returns>
        </member>
        <member name="M:KONNECT_REDIS.Controllers.KeysController.DeleteKey(KONNECT_REDIS.Models.Dtos.KeyDto)">
            <summary>
            Delete a key
            </summary>
            <param name="key"></param>
            <returns>True/False if key delete was success</returns>
        </member>
        <member name="M:KONNECT_REDIS.Controllers.KeysController.GetValue(KONNECT_REDIS.Models.Dtos.KeyDto)">
            <summary>
            get value of key
            </summary>
            <param name="key"></param>
            <returns>value of key in string form</returns>
        </member>
        <member name="M:KONNECT_REDIS.Controllers.KeysController.SetKeyValue(KONNECT_REDIS.Models.Key)">
            <summary>
            Create new key value pair
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KONNECT_REDIS.Controllers.KeysController.CreateCollectionKeysToDelete(System.Collections.Generic.List{KONNECT_REDIS.Models.Dtos.KeyDto})">
            <summary>
            Creates a key value pair
            key == keys2delete
            value == keys to be deleted
            </summary>
            <param name="keys"></param>
            <returns>True or false whether creation was succesful or not</returns>
        </member>
        <member name="M:KONNECT_REDIS.Controllers.KeysController.DeleteKeysBySelect(System.String)">
            <summary>
            Delete a multiple keys by select
            </summary>
            <param name="selection">Selected keys</param>
            <returns>True or false whether delete was successful</returns>
        </member>
        <member name="M:KONNECT_REDIS.Controllers.KeysController.GetUniquePatterns">
            <summary>
            Get available pattern types
            </summary>
            <returns> All unique pattern types of form String_Id, Int_Id, GUID, or {string contained in string descriptor} </returns>
        </member>
        <member name="M:KONNECT_REDIS.Services.KeysService.GetAllKeys(System.Nullable{System.Int32},System.Int32)">
            <summary>
            Retrieve All keys
            </summary>
            <param name="pageNumber">Page number</param>
            <param name="pageSize">Page size</param>
            <returns>List of Keys</returns>
        </member>
        <member name="M:KONNECT_REDIS.Services.KeysService.GetKeyByQuery(System.String,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Retrieves a list of keys according to a Redis key pattern 
            </summary>
            <param name="pattern">A Redis key pattern</param>
            <param name="pageNumber">Page number</param>
            <param name="pageSize">Page size</param>
            <returns></returns>
        </member>
        <member name="M:KONNECT_REDIS.Services.KeysService.BatchDeleteKeysByQuery(System.String)">
            <summary>
            Delete multiple keys by Redis key pattern
            </summary>
            <param name="pattern">A Redis key pattern</param>
            <returns>Number of deleted keys and pattern they followed, or throws an error</returns>
        </member>
        <member name="M:KONNECT_REDIS.Services.KeysService.DeleteKey(KONNECT_REDIS.Models.Dtos.KeyDto)">
            <summary>
            Delete key
            </summary>
            <param name="key"></param>
            <returns>True/False if key delete was success</returns>
        </member>
        <member name="M:KONNECT_REDIS.Services.KeysService.GetValue(KONNECT_REDIS.Models.Dtos.KeyDto)">
            <summary>
            Get value of key
            </summary>
            <param name="key"></param>
            <returns>Value of key in string form</returns>
        </member>
        <member name="M:KONNECT_REDIS.Services.KeysService.SetKeyValue(KONNECT_REDIS.Models.Key)">
            <summary>
            Add new key value pair in Redis db
            </summary>
            <param name="key"></param>
            <returns>True or false whether key value pair was succesfully added</returns>
        </member>
        <member name="M:KONNECT_REDIS.Services.KeysService.CreateCollectionKeysToDelete(System.Collections.Generic.List{KONNECT_REDIS.Models.Dtos.KeyDto})">
            <summary>
            Creates a key value pair
            key == keys2delete
            value == keys to be deleted
            </summary>
            <param name="keys"></param>
            <returns>True or false whether creation was succesful or not</returns>
        </member>
        <member name="M:KONNECT_REDIS.Services.KeysService.DeleteKeysBySelect(System.String)">
            <summary>
            Delete a multiple keys by select
            </summary>
            <param name="selection">Selected keys</param>
            <returns>True or false whether delete was successful</returns>
        </member>
    </members>
</doc>
